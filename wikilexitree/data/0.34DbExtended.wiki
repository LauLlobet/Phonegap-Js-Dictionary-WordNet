++ 0.*DONE *DONE 34Db Extended**

*DONE c:1 delete favourites*

*DONE c:2 renames favourite_senses selected_senses*

*DONE c:3 fer de senses delete , nodelete amb timestamp*

*DONE c:4 insert previous sense*

*DONE c:5 test origin push default*

*DONE c:6 create commiter script*

falta mirar excepcio no hi han guions
falta fer el mergebranch
falta descafeinarlo per a publicarlo
falta publicarlo amb la app restartwikidpad.wiki

*DONE c:7 ensenyar al papa el sistema*

# fer que la caixa de paraula sigui contrastada en el fons groc

*DONE c:8 create tables ANS_SENSE_CASE TEST GRID SENSE_SET*

*DONE c:9 crear view selected_wordsXsenses i select a load_pgrid()*

*DONE c:10 instalar llibreria sets *

*DONE c:11 carregar objecte senses en un set accesible desde altres funcions*

*DONE c:12 taules pensades 1 per a la persistencia del test i la grid*
    # s'ha eliminat camps que no es corresponien
    # trap1|2id ja no son ssenseids per permetre altres tipus

*DONE c:13 taules pensades 2 per a la persistencia del test i la grid*
    #hi haura redundancia i posibles mals entesos dels selected del grid en les sensetestcase
    #s'eliminen els test_sets 

*DONE c:14 taules pensades 2 WORKING per a la persistencia del test i la grid*
    # carregar old schema a old_added_schema.txt

*DONE c:15 simbolic links habien petat !!! arreglat , simbolic links relatius ara*

*DONE c:16 taules pensades 3 WORKING 100% per a la persistencia del test i la grid*


++ [calc del ordre del set]

    distribute grid agafara el set total de preguntes selected 
    el distribuira en sets de uns 5/10 elements interiors
    els sets estaran ordenats per level(fixe) i dps per vellesa(= tamany)

*DONE c:17 insert de random correct/incorrect al seleccionar paraules*

*DONE c:18 crear norma de distribucio de les levels => lineal*
    s haura de fer cinc vegades be per cada malament

*DONE c:19 crear classe (lvl_case_set) duplicant atribut vellesa amb compare*

*DONE c:20 crear sorted sets de cada level segons nivell*

*DONE c:21 (Demo2Learn) resquebrajar sets lvl_case_id per level : com funciona forEachSlice*

*DONE c:22 resquebrajar sets al 100% fet, read del grid OK*

++ [test_grid contra base de dades]

*DONE c:23 es fara un test nou cada vegada que es WHEN*
            # modifiqui la llista de senses 
            # s'accedeixi al pgrid

*DONE c:24 es crearan testos nous en les seguents condicions*

    Si el test no esta acabat i s' afegeix una paraula nova:
    # fila nova de test amb senseid actualitzada

    Si el test s'ha començat i no s'ha afegit una paraula nova
    # fila nova de test amb senseid identica 

- BUG REPAIR es crearan testos nous en les seguents condicions

- crear objectes selected_senses amb els camps de la taula a partir dels selected_senses

- Persistencia es mirara (si selected)
    quines files respon a l'ultim test sense acabar
Si no hi ha files es crearan
 



- save els ans_senses_case en bd 

    # pot cambiar el selected words i no el testcases ultim guardat
        # arxivar la ultima linea de selected senses en la creacio del test

    # update testcases where testid is newest WHEN pgridrefresh && someselected
    # create testcases where testid is newest WHEN pgridrefresh && someselected numselect=0
        # if not result , insert for that testid

- write del grid , boto oprimit bd_selected  


++ [tooggle pgrid contra base de dades]

++ [ans de preguntes test a test contra base de dades]

++ [resultats test contra base de dades]

 evitar que es pregunti una definicio de lift esperant lift i que una de les respostes sigui elevator ... el usr clicka elevator estant be i es puntua malament
