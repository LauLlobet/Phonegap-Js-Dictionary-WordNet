
/system/xbin/sqlite3 /data/data/com.tubtale.lexitree/databases/new_lexitree.db
SELECT * FROM sqlite_master WHERE type='table';


delete from `selected_senses`;
delete from `ans_sense_cases`;
delete from `test`;
delete from `subjects`;
delete from `subject_sets`;


drop table `selected_senses`;
drop table `ans_sense_cases`;
drop table `test`;
drop table `subjects`;
drop table `subject_sets`;
drop view  selected_wordsXsenses;
drop view  selected_words;

CREATE TABLE `lang_synsets` (
  `lemmaid`integer NOT NULL DEFAULT '0'
,  `wordid` integer DEFAULT NULL
,  `lang` text DEFAULT NULL
,  `pos` text DEFAULT NULL
,  `synsetid` integer DEFAULT NULL
,  PRIMARY KEY (`lemmaid`)
);


CREATE TABLE `selected_senses` (
  `ssenseid`integer NOT NULL DEFAULT '0'
,  `ctime` integer DEFAULT NULL
,  `dtime` integer DEFAULT NULL
,  `correct` integer DEFAULT NULL
,  `incorrect` integer DEFAULT NULL
,  `wordid` integer  NOT NULL DEFAULT '0'
,  `synsetid` integer  DEFAULT NULL
,  `previous_synsetid` integer DEFAULT NULL
,  PRIMARY KEY (`ssenseid`)
);


CREATE TABLE `ans_sense_cases` (
  `sensecaseid`integer NOT NULL DEFAULT '0'
,  `stime` integer DEFAULT NULL
,  `etime` integer DEFAULT NULL
,  `ssenseid` integer  DEFAULT NULL
,  `wordid` integer  NOT NULL DEFAULT '0'
,  `testid` integer  DEFAULT NULL
,  `trap1id` integer  DEFAULT NULL
,  `trap2id` integer  DEFAULT NULL
,  `anssid` integer  DEFAULT NULL
,  `anstype`  varchar(30) DEFAULT NULL
,  `selected` integer NOT NULL DEFAULT '0'
,  `y_lvl` integer DEFAULT NULL
,  `x_serie` integer DEFAULT NULL
,  PRIMARY KEY (`sensecaseid`)
);

CREATE TABLE `test` ( 
  `testid`integer NOT NULL DEFAULT '0'
,  `stime` integer DEFAULT NULL
,  `etime` integer DEFAULT NULL
,  `lastssenseid`integer DEFAULT NULL
,  PRIMARY KEY (`testid`)
);

CREATE TABLE `subjects` (
  `subjectid` integer NOT NULL DEFAULT '0'
, `name`  varchar(200) DEFAULT NULL
, `domine`  varchar(200) DEFAULT NULL
, `slot` integer DEFAULT NULL
, `icon` integer DEFAULT NULL
, `public` integer DEFAULT NULL
, `ctime` integer DEFAULT NULL
, `dtime` integer DEFAULT NULL
, `langquestion` text DEFAULT NULL
, `langanswer` text DEFAULT NULL
,  PRIMARY KEY (`subject_id`)
);


CREATE TABLE `subject_sets` (
  `subjectid` integer NOT NULL DEFAULT '0'
, `ssenseid` integer NOT NULL DEFAULT '0'
,  PRIMARY KEY (`subject_id`,`ssenseid`)
);

CREATE TABLE `synsets_index` (
  `id` integer NOT NULL DEFAULT '0'
, `synsetid` integer NOT NULL DEFAULT '0'
,  PRIMARY KEY (`id`)
);

insert into synsets_index(synsetid) select synsetid from synsets;


CREATE VIEW selected_words AS SELECT lemma, ctime,dtime,wordid,synsetid FROM selected_senses LEFT JOIN words s USING (wordid) 
WHERE dtime IS NULL   GROUP BY lemma ORDER BY ctime DESC;


CREATE VIEW selected_wordsXsenses AS SELECT * FROM selected_senses LEFT JOIN words s USING (wordid) LEFT JOIN synsets USING (synsetid)
WHERE dtime IS NULL ORDER BY ctime DESC;


CREATE VIEW selected_wordsXsensesXcases AS SELECT * FROM selected_senses LEFT JOIN words s USING (wordid) LEFT JOIN synsets USING (synsetid) LEFT JOIN (select * from ans_sense_cases where testid= (select MAX(testid) from test)) USING (ssenseid) WHERE dtime IS NULL ORDER BY ctime DESC ;

CREATE VIEW wordsXsensesXcases AS SELECT * FROM words LEFT JOIN synsets USING (synsetid) LEFT JOIN synsets_index USING (synsetid);



taules de trancision
--------------------


CREATE TABLE `offset_tmp` (
  `tid`integer NOT NULL DEFAULT '0'
,  `oid` integer DEFAULT NULL
,  `sensekey` varchar(100) DEFAULT NULL
,  PRIMARY KEY (`tid`)
);

CREATE TABLE `lang_off_lemmas` (
  `lemmaid`integer NOT NULL DEFAULT '0'
,  `lemma` text DEFAULT NULL
,  `lang` text DEFAULT NULL
,  `pos` text DEFAULT NULL
,  `oid` integer  NOT NULL DEFAULT '0'
,  PRIMARY KEY (`lemmaid`)
);

insert into lang_lemmas (lemmalang,lang,pos,synsetid) select distinct lemma,lang,pos,synsetid from lang_off_lemmas left join offset_tmp using(oid) left join senses using (sensekey);


important lemmalang a words
---------------------------
CREATE TABLE `lang_lemmas` (
  `lemmaid`integer NOT NULL DEFAULT '0'
,  `lemmalang` text DEFAULT NULL
,  `lang` text DEFAULT NULL
,  `pos` text DEFAULT NULL
,  `synsetid` integer DEFAULT NULL
,  PRIMARY KEY (`lemmaid`)
);


SELECT distinct lemmalang FROM lang_lemmas WHERE lemmalang NOT IN(SELECT lemma FROM words) AND lemmalang="bonic";

insert into words(lemma) SELECT distinct lemmalang FROM lang_lemmas WHERE lemmalang NOT IN(SELECT lemma FROM words);

insert into lang_synsets (wordid,lang,pos,synsetid) select wordid,lang,pos,synsetid from lang_lemmas left join words on lemma=lemmalang;

create view lang_lemmas as select * from lang_synsets left join words using(wordid);
