
/system/xbin/sqlite3 /data/data/com.tubtale.lexitree/databases/new_lexitree.db
SELECT * FROM sqlite_master WHERE type='table';


delete from `selected_senses`;
delete from `ans_sense_cases`;
delete from `test`;
delete from `subjects`;
delete from `subject_sets`;


drop table `selected_senses`;
drop table `ans_sense_cases`;
drop table `test`;
drop table `subjects`;
drop table `subject_sets`;
drop view  selected_wordsXsenses;
drop view  selected_words;


CREATE TABLE 'global_vars' (
   'user' text DEFAULT NULL
,  'subjectid' integer DEFAULT '1'
,  PRIMARY KEY ('user')
);

update global_vars set subjectid=2 where user='default';


CREATE TABLE `lang_synsets` (
  `lemmaid`integer NOT NULL DEFAULT '0'
,  `wordid` integer DEFAULT NULL
,  `lang` text DEFAULT NULL
,  `pos` text DEFAULT NULL
,  `synsetid` integer DEFAULT NULL
,  PRIMARY KEY (`lemmaid`)
);

CREATE TABLE `selected_senses` (
  `ssenseid`integer NOT NULL DEFAULT '0'
,  `ctime` integer DEFAULT NULL
,  `dtime` integer DEFAULT NULL
,  `correct` integer DEFAULT NULL
,  `incorrect` integer DEFAULT NULL
,  `wordid` integer  NOT NULL DEFAULT '0'
,  `synsetid` integer  DEFAULT NULL
,  `previous_synsetid` integer DEFAULT NULL
,  `original_lang` varchar(5) DEFAULT 'eng'
,  PRIMARY KEY (`ssenseid`)
);


insert into selected_senses(wordid,synsetid,ctime,previous_synsetid,correct,incorrect,original_lang) values  ('40', '30', '20', '0' , '0', '0',(select langquestion from subjects where subjectid=( select subjectid from global_vars where user='default' )));



create view selected_translated_words as 
select sw.wordid|| ', ' || CASE WHEN 
(select langquestion from subjects where subjectid=( select subjectid from global_vars where user='default' )) IN (select lang from lang_synsets ls where ls.wordid=sw.wordid limit 1)
THEN lemma
ELSE (select lemma from lang_synsets lss left join words using(wordid) where lss.synsetid=sw.synsetid and lang=(select langquestion from subjects where subjectid=( select subjectid from global_vars where user='default' )) limit 1)
END AS 'language' FROM selected_words sw;

// si traduccio es null !!!


select sw.wordid|| ', ' || CASE WHEN 
(
    (
        (select langquestion from subjects where subjectid=( select subjectid from global_vars where user='default' )) 
        NOT IN 
        (select lang from lang_synsets ls where ls.wordid=sw.wordid limit 1)
    )
   AND 
    (
        (select count(*) from lang_synsets lss left join words using(wordid) where lss.synsetid=107664640 and lang=(select langquestion from subjects where subjectid=( select subjectid from global_vars where user='default' ))) != 0 
    )
)
THEN (select lemma from lang_synsets lss left join words using(wordid) where lss.synsetid=sw.synsetid and lang=(select langquestion from subjects where subjectid=( select subjectid from global_vars where user='default' )) limit 1)
ELSE lemma
END AS 'language' FROM selected_words sw;


select sw.wordid|| ', ' || CASE WHEN 
( select count(*) from lang_synsets lss left join words using(wordid) where lss.synsetid=107664640 and lang=(select langquestion from subjects where subjectid=( select subjectid from global_vars where user='default' ))=1 )
then 'hola'
else 'adeu' end as 'coco' from selected_words sw;

CREATE TABLE `ans_sense_cases` (
  `sensecaseid`integer NOT NULL DEFAULT '0'
,  `stime` integer DEFAULT NULL
,  `etime` integer DEFAULT NULL
,  `ssenseid` integer  DEFAULT NULL
,  `wordid` integer  NOT NULL DEFAULT '0'
,  `testid` integer  DEFAULT NULL
,  `trap1id` integer  DEFAULT NULL
,  `trap2id` integer  DEFAULT NULL
,  `anssid` integer  DEFAULT NULL
,  `anstype`  varchar(30) DEFAULT NULL
,  `selected` integer NOT NULL DEFAULT '0'
,  `y_lvl` integer DEFAULT NULL
,  `x_serie` integer DEFAULT NULL
,  PRIMARY KEY (`sensecaseid`)
);

CREATE TABLE `test` ( 
  `testid`integer NOT NULL DEFAULT '0'
,  `stime` integer DEFAULT NULL
,  `etime` integer DEFAULT NULL
,  `lastssenseid`integer DEFAULT NULL
,  PRIMARY KEY (`testid`)
);

CREATE TABLE `subjects` (
  `subjectid` integer NOT NULL DEFAULT '0'
, `name`  varchar(200) DEFAULT NULL
, `domine`  varchar(200) DEFAULT NULL
, `icon` integer DEFAULT NULL
, `public` integer DEFAULT NULL
, `ctime` integer DEFAULT NULL
, `dtime` integer DEFAULT NULL
, `langquestion` text DEFAULT NULL
, `langanswer` text DEFAULT NULL
,  PRIMARY KEY (`subjectid`)
);


insert into subjects(name,domine,icon,public,ctime,langquestion,langanswer) values('hamlet','lexitree',3,1,1330,'eng','eng_def');
insert into subjects(name,domine,icon,public,ctime,langquestion,langanswer) values('romeo','lexitree',3,1,1330,'ita','cat');
insert into subjects(name,domine,icon,public,ctime,langquestion,langanswer) values('lear','lexitree',3,1,1330,'eng','heb');
insert into subjects(name,domine,icon,public,ctime,langquestion,langanswer) values('othello','lexitree',3,1,1330,'spa','cat');
insert into subjects(name,domine,icon,public,ctime,langquestion,langanswer) values('cesar','lexitree',3,1,1330,'en','ita');


CREATE TABLE `subject_sets` (
  `subjectid` integer NOT NULL DEFAULT '0'
, `ssenseid` integer NOT NULL DEFAULT '0'
,  PRIMARY KEY (`subjectid`,`ssenseid`)
);

insert into subject_sets(subjectid,ssenseid) values(1,6) ;
insert into subject_sets(subjectid,ssenseid) values(1,7) ;

CREATE TABLE `synsets_index` (
  `id` integer NOT NULL DEFAULT '0'
, `synsetid` integer NOT NULL DEFAULT '0'
,  PRIMARY KEY (`id`)
);

// veure final

CREATE VIEW selected_words AS SELECT lemma, ss.ctime,ss.dtime,wordid,synsetid,name, subjectid,domine FROM selected_senses ss LEFT JOIN subject_sets using(ssenseid) LEFT JOIN subjects using(subjectid) LEFT JOIN words s USING (wordid) left join global_vars using(subjectid) where user='default' and ss.dtime IS NULL GROUP BY lemma ORDER BY ss.ctime DESC;

CREATE VIEW selected_wordsXsenses AS SELECT * FROM selected_senses ss LEFT JOIN words s USING (wordid) LEFT JOIN synsets USING (synsetid) LEFT JOIN subject_sets using(ssenseid) LEFT JOIN subjects using(subjectid) left join global_vars using(subjectid) where user='default' AND ss.dtime IS NULL ORDER BY ctime DESC;

CREATE VIEW selected_wordsXsensesXcases AS SELECT * FROM selected_senses ss LEFT JOIN words s USING (wordid) LEFT JOIN synsets USING (synsetid) LEFT JOIN (select * from ans_sense_cases where testid= (select MAX(testid) from test)) USING (ssenseid) LEFT JOIN subject_sets using(ssenseid) LEFT JOIN subjects using(subjectid) left join global_vars using(subjectid) where user='default' and ss.dtime IS NULL ORDER BY ss.ctime DESC ;




taules de trancision
--------------------


CREATE TABLE `offset_tmp` (
  `tid`integer NOT NULL DEFAULT '0'
,  `oid` integer DEFAULT NULL
,  `sensekey` varchar(100) DEFAULT NULL
,  PRIMARY KEY (`tid`)
);

CREATE TABLE `lang_off_lemmas` (
  `lemmaid`integer NOT NULL DEFAULT '0'
,  `lemma` text DEFAULT NULL
,  `lang` text DEFAULT NULL
,  `pos` text DEFAULT NULL
,  `oid` integer  NOT NULL DEFAULT '0'
,  PRIMARY KEY (`lemmaid`)
);

insert into lang_lemmas (lemmalang,lang,pos,synsetid) select distinct lemma,lang,pos,synsetid from lang_off_lemmas left join offset_tmp using(oid) left join senses using (sensekey);


important lemmalang a words
---------------------------
CREATE TABLE `lang_lemmas` (
  `lemmaid`integer NOT NULL DEFAULT '0'
,  `lemmalang` text DEFAULT NULL
,  `lang` text DEFAULT NULL
,  `pos` text DEFAULT NULL
,  `synsetid` integer DEFAULT NULL
,  PRIMARY KEY (`lemmaid`)
);
CREATE VIEW lang_lemmas as select * from lang_synsets left join words using(wordid);



SELECT distinct lemmalang FROM lang_lemmas WHERE lemmalang NOT IN(SELECT lemma FROM words) AND lemmalang="bonic";

insert into words(lemma) SELECT distinct lemmalang FROM lang_lemmas WHERE lemmalang NOT IN(SELECT lemma FROM words);

insert into lang_synsets (wordid,lang,pos,synsetid) select wordid,lang,pos,synsetid from lang_lemmas left join words on lemma=lemmalang;

create view lang_lemmas as select * from lang_synsets left join words using(wordid);


indexant sensesXindex / synsets_index
---------------------------------------

SELECT Ma,
       COUNT(DISTINCT Mi) AS Num
FROM ATableLikeThis
GROUP BY Ma
HAVING COUNT(DISTINCT Mi) >= 3


insert into synsets_index(synsetid) select synsetid FROM lang_synsets Group By synsetid having count (Distinct lang) >=15;


afegint les paraules en angles a lang_synsets
----------------------------------------------



